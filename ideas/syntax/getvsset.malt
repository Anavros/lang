
# What if functions that mutate state are marked with a bang, and functions
# without arguments can omit parens?

"STRING".lower!;
s = "STRING".lower;
c = "STRING".0;


object = {
    x = 1;
    y = { x*2 };
    set y = err;
};

object.x;
object.y();
# or
object.y;
# ?

# It's read-only, in the same sense as a variable, right?
# What about setting though.

object.x = 10;
object.y = 10;  # not good
object.y() = 10;  # obviously disallowed

# What if all member accesses require parens?
# Like adding parens turns it into a message.
object.x() == 1;
object.y() == 2;

# But then what about setting values?
object.x = 4;
object.y = { sqrt(object.x) };

# Yeah, that works great.
