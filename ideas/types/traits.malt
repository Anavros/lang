
###
Update
###

Player = ();
SoggyClothes = ();

dry = Player();
wet = Player()::SoggyClothes();

complain = (sog:SoggyClothes) {};

dry.complain();  # doesn't work
wet.complain();  # works because wet has SoggyClothes()


###
Traits are sets of functionality that are combined
with variables directly, rather than their
classes. They are distinct from mixins: mixins
affect classes.
###

trait SoggyClothes {
    fun complain();
};

dry = Player();
wet = Player() with SoggyClothes;

dry.complain();  # doesn't work
wet.complain();  # uses the trait function

###
I might be misunderstanding this actually. I'm not
sure that traits are applied on a per-instance
basis.
###
