
###
An array is a typed, ordered collection of items
that are stored contiguously in memory.
###


# Module
import mem;
from errors import Failure, IndexError, TypeError;

Array = Type [T] (n:Num) {
    size = mem.sizeof(T) : Num;
    head = mem.alloc(n*size) : Address;

    ptr_offset = Func (a:Array, index:Num) : Address {
        return Address(a.head + index*a.size);
    }

    put = Func (a:Array, element:T, index:Num) {
        if index >= a.n {
            return Failure(IndexError);
        }
        start = a.head + (index*a.size);
        mem.write(start, mem.sizeof(T), element);
    }

    get = Func (a:Array, index:Num) : T {
        data = mem.read(ptr_offset(a, index));
        return mem.convert(data, T);
    }
}


# Usage
import array;

a = array.Array[Num](5);  # [?, ?, ?, ?, ?]

a.put(Num(32), 1);        # [?,32, ?, ?, ?]
a.put(Point(1, 2, 3), 0); # Fails (Type)
a.put(Num(1), 100);       # Fails (Index)

n = a.get(1);  # Num(32);
