Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program line
Rule 2     program -> line
Rule 3     line -> statement SEMICOLON
Rule 4     statement -> function_call
Rule 5     statement -> function block
Rule 6     statement -> structure
Rule 7     statement -> definition
Rule 8     statement -> mutation
Rule 9     definition -> lside ASSIGN rside
Rule 10    mutation -> lside MUTATE rside
Rule 11    lside -> NAME
Rule 12    rside -> value
Rule 13    rside -> group
Rule 14    value -> NAME
Rule 15    value -> STRING
Rule 16    value -> NUMERAL
Rule 17    group -> LPAREN argument_list RPAREN
Rule 18    block -> LBRACE RBRACE
Rule 19    function_call -> NAME LPAREN argument_list RPAREN
Rule 20    function_call -> NAME LPAREN RPAREN
Rule 21    function -> NAME NAME LPAREN RPAREN
Rule 22    function -> NAME NAME LPAREN RPAREN NAME NAME
Rule 23    function -> NAME NAME LPAREN parameter_list RPAREN
Rule 24    function -> NAME NAME LPAREN parameter_list RPAREN NAME NAME
Rule 25    structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
Rule 26    structure -> NAME NAME ASSIGN LPAREN parameter_list RPAREN
Rule 27    type_parameter -> NAME
Rule 28    type_parameter_list -> type_parameter_list COMMA type_parameter
Rule 29    type_parameter_list -> type_parameter
Rule 30    parameter -> NAME NAME
Rule 31    parameter_list -> parameter_list COMMA parameter
Rule 32    parameter_list -> parameter
Rule 33    argument -> value
Rule 34    argument -> NAME ASSIGN value
Rule 35    argument_list -> argument_list COMMA argument
Rule 36    argument_list -> argument

Terminals, with rules where they appear

ASSIGN               : 9 25 26 34
COMMA                : 28 31 35
LBRACE               : 18
LBRACK               : 25
LPAREN               : 17 19 20 21 22 23 24 25 26
MUTATE               : 10
NAME                 : 11 14 19 20 21 21 22 22 22 22 23 23 24 24 24 24 25 25 26 26 27 30 30 34
NUMERAL              : 16
RBRACE               : 18
RBRACK               : 25
RPAREN               : 17 19 20 21 22 23 24 25 26
SEMICOLON            : 3
STRING               : 15
error                : 

Nonterminals, with rules where they appear

argument             : 35 36
argument_list        : 17 19 35
block                : 5
definition           : 7
function             : 5
function_call        : 4
group                : 13
line                 : 1 2
lside                : 9 10
mutation             : 8
parameter            : 31 32
parameter_list       : 23 24 25 26 31
program              : 1 0
rside                : 9 10
statement            : 3
structure            : 6
type_parameter       : 28 29
type_parameter_list  : 25 28
value                : 12 33 34

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program line
    (2) program -> . line
    (3) line -> . statement SEMICOLON
    (4) statement -> . function_call
    (5) statement -> . function block
    (6) statement -> . structure
    (7) statement -> . definition
    (8) statement -> . mutation
    (19) function_call -> . NAME LPAREN argument_list RPAREN
    (20) function_call -> . NAME LPAREN RPAREN
    (21) function -> . NAME NAME LPAREN RPAREN
    (22) function -> . NAME NAME LPAREN RPAREN NAME NAME
    (23) function -> . NAME NAME LPAREN parameter_list RPAREN
    (24) function -> . NAME NAME LPAREN parameter_list RPAREN NAME NAME
    (25) structure -> . NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
    (26) structure -> . NAME NAME ASSIGN LPAREN parameter_list RPAREN
    (9) definition -> . lside ASSIGN rside
    (10) mutation -> . lside MUTATE rside
    (11) lside -> . NAME

    NAME            shift and go to state 7

    program                        shift and go to state 6
    mutation                       shift and go to state 5
    statement                      shift and go to state 9
    line                           shift and go to state 2
    function                       shift and go to state 1
    lside                          shift and go to state 3
    structure                      shift and go to state 4
    function_call                  shift and go to state 8
    definition                     shift and go to state 10

state 1

    (5) statement -> function . block
    (18) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 12

    block                          shift and go to state 11

state 2

    (2) program -> line .

    NAME            reduce using rule 2 (program -> line .)
    $end            reduce using rule 2 (program -> line .)


state 3

    (9) definition -> lside . ASSIGN rside
    (10) mutation -> lside . MUTATE rside

    ASSIGN          shift and go to state 14
    MUTATE          shift and go to state 13


state 4

    (6) statement -> structure .

    SEMICOLON       reduce using rule 6 (statement -> structure .)


state 5

    (8) statement -> mutation .

    SEMICOLON       reduce using rule 8 (statement -> mutation .)


state 6

    (0) S' -> program .
    (1) program -> program . line
    (3) line -> . statement SEMICOLON
    (4) statement -> . function_call
    (5) statement -> . function block
    (6) statement -> . structure
    (7) statement -> . definition
    (8) statement -> . mutation
    (19) function_call -> . NAME LPAREN argument_list RPAREN
    (20) function_call -> . NAME LPAREN RPAREN
    (21) function -> . NAME NAME LPAREN RPAREN
    (22) function -> . NAME NAME LPAREN RPAREN NAME NAME
    (23) function -> . NAME NAME LPAREN parameter_list RPAREN
    (24) function -> . NAME NAME LPAREN parameter_list RPAREN NAME NAME
    (25) structure -> . NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
    (26) structure -> . NAME NAME ASSIGN LPAREN parameter_list RPAREN
    (9) definition -> . lside ASSIGN rside
    (10) mutation -> . lside MUTATE rside
    (11) lside -> . NAME

    NAME            shift and go to state 7

    mutation                       shift and go to state 5
    statement                      shift and go to state 9
    line                           shift and go to state 15
    function                       shift and go to state 1
    lside                          shift and go to state 3
    structure                      shift and go to state 4
    function_call                  shift and go to state 8
    definition                     shift and go to state 10

state 7

    (19) function_call -> NAME . LPAREN argument_list RPAREN
    (20) function_call -> NAME . LPAREN RPAREN
    (21) function -> NAME . NAME LPAREN RPAREN
    (22) function -> NAME . NAME LPAREN RPAREN NAME NAME
    (23) function -> NAME . NAME LPAREN parameter_list RPAREN
    (24) function -> NAME . NAME LPAREN parameter_list RPAREN NAME NAME
    (25) structure -> NAME . NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
    (26) structure -> NAME . NAME ASSIGN LPAREN parameter_list RPAREN
    (11) lside -> NAME .

    LPAREN          shift and go to state 16
    NAME            shift and go to state 17
    ASSIGN          reduce using rule 11 (lside -> NAME .)
    MUTATE          reduce using rule 11 (lside -> NAME .)


state 8

    (4) statement -> function_call .

    SEMICOLON       reduce using rule 4 (statement -> function_call .)


state 9

    (3) line -> statement . SEMICOLON

    SEMICOLON       shift and go to state 18


state 10

    (7) statement -> definition .

    SEMICOLON       reduce using rule 7 (statement -> definition .)


state 11

    (5) statement -> function block .

    SEMICOLON       reduce using rule 5 (statement -> function block .)


state 12

    (18) block -> LBRACE . RBRACE

    RBRACE          shift and go to state 19


state 13

    (10) mutation -> lside MUTATE . rside
    (12) rside -> . value
    (13) rside -> . group
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL
    (17) group -> . LPAREN argument_list RPAREN

    NAME            shift and go to state 21
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23
    LPAREN          shift and go to state 20

    value                          shift and go to state 24
    group                          shift and go to state 25
    rside                          shift and go to state 26

state 14

    (9) definition -> lside ASSIGN . rside
    (12) rside -> . value
    (13) rside -> . group
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL
    (17) group -> . LPAREN argument_list RPAREN

    NAME            shift and go to state 21
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23
    LPAREN          shift and go to state 20

    value                          shift and go to state 24
    group                          shift and go to state 25
    rside                          shift and go to state 27

state 15

    (1) program -> program line .

    NAME            reduce using rule 1 (program -> program line .)
    $end            reduce using rule 1 (program -> program line .)


state 16

    (19) function_call -> NAME LPAREN . argument_list RPAREN
    (20) function_call -> NAME LPAREN . RPAREN
    (35) argument_list -> . argument_list COMMA argument
    (36) argument_list -> . argument
    (33) argument -> . value
    (34) argument -> . NAME ASSIGN value
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL

    RPAREN          shift and go to state 31
    NAME            shift and go to state 28
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23

    value                          shift and go to state 32
    argument_list                  shift and go to state 29
    argument                       shift and go to state 30

state 17

    (21) function -> NAME NAME . LPAREN RPAREN
    (22) function -> NAME NAME . LPAREN RPAREN NAME NAME
    (23) function -> NAME NAME . LPAREN parameter_list RPAREN
    (24) function -> NAME NAME . LPAREN parameter_list RPAREN NAME NAME
    (25) structure -> NAME NAME . LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
    (26) structure -> NAME NAME . ASSIGN LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 33
    LBRACK          shift and go to state 34
    ASSIGN          shift and go to state 35


state 18

    (3) line -> statement SEMICOLON .

    NAME            reduce using rule 3 (line -> statement SEMICOLON .)
    $end            reduce using rule 3 (line -> statement SEMICOLON .)


state 19

    (18) block -> LBRACE RBRACE .

    SEMICOLON       reduce using rule 18 (block -> LBRACE RBRACE .)


state 20

    (17) group -> LPAREN . argument_list RPAREN
    (35) argument_list -> . argument_list COMMA argument
    (36) argument_list -> . argument
    (33) argument -> . value
    (34) argument -> . NAME ASSIGN value
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL

    NAME            shift and go to state 28
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23

    value                          shift and go to state 32
    argument_list                  shift and go to state 36
    argument                       shift and go to state 30

state 21

    (14) value -> NAME .

    RPAREN          reduce using rule 14 (value -> NAME .)
    COMMA           reduce using rule 14 (value -> NAME .)
    SEMICOLON       reduce using rule 14 (value -> NAME .)


state 22

    (15) value -> STRING .

    RPAREN          reduce using rule 15 (value -> STRING .)
    COMMA           reduce using rule 15 (value -> STRING .)
    SEMICOLON       reduce using rule 15 (value -> STRING .)


state 23

    (16) value -> NUMERAL .

    RPAREN          reduce using rule 16 (value -> NUMERAL .)
    COMMA           reduce using rule 16 (value -> NUMERAL .)
    SEMICOLON       reduce using rule 16 (value -> NUMERAL .)


state 24

    (12) rside -> value .

    SEMICOLON       reduce using rule 12 (rside -> value .)


state 25

    (13) rside -> group .

    SEMICOLON       reduce using rule 13 (rside -> group .)


state 26

    (10) mutation -> lside MUTATE rside .

    SEMICOLON       reduce using rule 10 (mutation -> lside MUTATE rside .)


state 27

    (9) definition -> lside ASSIGN rside .

    SEMICOLON       reduce using rule 9 (definition -> lside ASSIGN rside .)


state 28

    (34) argument -> NAME . ASSIGN value
    (14) value -> NAME .

    ASSIGN          shift and go to state 37
    RPAREN          reduce using rule 14 (value -> NAME .)
    COMMA           reduce using rule 14 (value -> NAME .)


state 29

    (19) function_call -> NAME LPAREN argument_list . RPAREN
    (35) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 39
    COMMA           shift and go to state 38


state 30

    (36) argument_list -> argument .

    RPAREN          reduce using rule 36 (argument_list -> argument .)
    COMMA           reduce using rule 36 (argument_list -> argument .)


state 31

    (20) function_call -> NAME LPAREN RPAREN .

    SEMICOLON       reduce using rule 20 (function_call -> NAME LPAREN RPAREN .)


state 32

    (33) argument -> value .

    RPAREN          reduce using rule 33 (argument -> value .)
    COMMA           reduce using rule 33 (argument -> value .)


state 33

    (21) function -> NAME NAME LPAREN . RPAREN
    (22) function -> NAME NAME LPAREN . RPAREN NAME NAME
    (23) function -> NAME NAME LPAREN . parameter_list RPAREN
    (24) function -> NAME NAME LPAREN . parameter_list RPAREN NAME NAME
    (31) parameter_list -> . parameter_list COMMA parameter
    (32) parameter_list -> . parameter
    (30) parameter -> . NAME NAME

    RPAREN          shift and go to state 42
    NAME            shift and go to state 41

    parameter_list                 shift and go to state 40
    parameter                      shift and go to state 43

state 34

    (25) structure -> NAME NAME LBRACK . type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN
    (28) type_parameter_list -> . type_parameter_list COMMA type_parameter
    (29) type_parameter_list -> . type_parameter
    (27) type_parameter -> . NAME

    NAME            shift and go to state 44

    type_parameter_list            shift and go to state 46
    type_parameter                 shift and go to state 45

state 35

    (26) structure -> NAME NAME ASSIGN . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 47


state 36

    (17) group -> LPAREN argument_list . RPAREN
    (35) argument_list -> argument_list . COMMA argument

    RPAREN          shift and go to state 48
    COMMA           shift and go to state 38


state 37

    (34) argument -> NAME ASSIGN . value
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL

    NAME            shift and go to state 21
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23

    value                          shift and go to state 49

state 38

    (35) argument_list -> argument_list COMMA . argument
    (33) argument -> . value
    (34) argument -> . NAME ASSIGN value
    (14) value -> . NAME
    (15) value -> . STRING
    (16) value -> . NUMERAL

    NAME            shift and go to state 28
    STRING          shift and go to state 22
    NUMERAL         shift and go to state 23

    value                          shift and go to state 32
    argument                       shift and go to state 50

state 39

    (19) function_call -> NAME LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 19 (function_call -> NAME LPAREN argument_list RPAREN .)


state 40

    (23) function -> NAME NAME LPAREN parameter_list . RPAREN
    (24) function -> NAME NAME LPAREN parameter_list . RPAREN NAME NAME
    (31) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 52
    COMMA           shift and go to state 51


state 41

    (30) parameter -> NAME . NAME

    NAME            shift and go to state 53


state 42

    (21) function -> NAME NAME LPAREN RPAREN .
    (22) function -> NAME NAME LPAREN RPAREN . NAME NAME

    LBRACE          reduce using rule 21 (function -> NAME NAME LPAREN RPAREN .)
    NAME            shift and go to state 54


state 43

    (32) parameter_list -> parameter .

    RPAREN          reduce using rule 32 (parameter_list -> parameter .)
    COMMA           reduce using rule 32 (parameter_list -> parameter .)


state 44

    (27) type_parameter -> NAME .

    RBRACK          reduce using rule 27 (type_parameter -> NAME .)
    COMMA           reduce using rule 27 (type_parameter -> NAME .)


state 45

    (29) type_parameter_list -> type_parameter .

    RBRACK          reduce using rule 29 (type_parameter_list -> type_parameter .)
    COMMA           reduce using rule 29 (type_parameter_list -> type_parameter .)


state 46

    (25) structure -> NAME NAME LBRACK type_parameter_list . RBRACK ASSIGN LPAREN parameter_list RPAREN
    (28) type_parameter_list -> type_parameter_list . COMMA type_parameter

    RBRACK          shift and go to state 55
    COMMA           shift and go to state 56


state 47

    (26) structure -> NAME NAME ASSIGN LPAREN . parameter_list RPAREN
    (31) parameter_list -> . parameter_list COMMA parameter
    (32) parameter_list -> . parameter
    (30) parameter -> . NAME NAME

    NAME            shift and go to state 41

    parameter_list                 shift and go to state 57
    parameter                      shift and go to state 43

state 48

    (17) group -> LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 17 (group -> LPAREN argument_list RPAREN .)


state 49

    (34) argument -> NAME ASSIGN value .

    RPAREN          reduce using rule 34 (argument -> NAME ASSIGN value .)
    COMMA           reduce using rule 34 (argument -> NAME ASSIGN value .)


state 50

    (35) argument_list -> argument_list COMMA argument .

    RPAREN          reduce using rule 35 (argument_list -> argument_list COMMA argument .)
    COMMA           reduce using rule 35 (argument_list -> argument_list COMMA argument .)


state 51

    (31) parameter_list -> parameter_list COMMA . parameter
    (30) parameter -> . NAME NAME

    NAME            shift and go to state 41

    parameter                      shift and go to state 58

state 52

    (23) function -> NAME NAME LPAREN parameter_list RPAREN .
    (24) function -> NAME NAME LPAREN parameter_list RPAREN . NAME NAME

    LBRACE          reduce using rule 23 (function -> NAME NAME LPAREN parameter_list RPAREN .)
    NAME            shift and go to state 59


state 53

    (30) parameter -> NAME NAME .

    RPAREN          reduce using rule 30 (parameter -> NAME NAME .)
    COMMA           reduce using rule 30 (parameter -> NAME NAME .)


state 54

    (22) function -> NAME NAME LPAREN RPAREN NAME . NAME

    NAME            shift and go to state 60


state 55

    (25) structure -> NAME NAME LBRACK type_parameter_list RBRACK . ASSIGN LPAREN parameter_list RPAREN

    ASSIGN          shift and go to state 61


state 56

    (28) type_parameter_list -> type_parameter_list COMMA . type_parameter
    (27) type_parameter -> . NAME

    NAME            shift and go to state 44

    type_parameter                 shift and go to state 62

state 57

    (26) structure -> NAME NAME ASSIGN LPAREN parameter_list . RPAREN
    (31) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 63
    COMMA           shift and go to state 51


state 58

    (31) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 31 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 31 (parameter_list -> parameter_list COMMA parameter .)


state 59

    (24) function -> NAME NAME LPAREN parameter_list RPAREN NAME . NAME

    NAME            shift and go to state 64


state 60

    (22) function -> NAME NAME LPAREN RPAREN NAME NAME .

    LBRACE          reduce using rule 22 (function -> NAME NAME LPAREN RPAREN NAME NAME .)


state 61

    (25) structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 65


state 62

    (28) type_parameter_list -> type_parameter_list COMMA type_parameter .

    RBRACK          reduce using rule 28 (type_parameter_list -> type_parameter_list COMMA type_parameter .)
    COMMA           reduce using rule 28 (type_parameter_list -> type_parameter_list COMMA type_parameter .)


state 63

    (26) structure -> NAME NAME ASSIGN LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 26 (structure -> NAME NAME ASSIGN LPAREN parameter_list RPAREN .)


state 64

    (24) function -> NAME NAME LPAREN parameter_list RPAREN NAME NAME .

    LBRACE          reduce using rule 24 (function -> NAME NAME LPAREN parameter_list RPAREN NAME NAME .)


state 65

    (25) structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN . parameter_list RPAREN
    (31) parameter_list -> . parameter_list COMMA parameter
    (32) parameter_list -> . parameter
    (30) parameter -> . NAME NAME

    NAME            shift and go to state 41

    parameter_list                 shift and go to state 66
    parameter                      shift and go to state 43

state 66

    (25) structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list . RPAREN
    (31) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 67
    COMMA           shift and go to state 51


state 67

    (25) structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 25 (structure -> NAME NAME LBRACK type_parameter_list RBRACK ASSIGN LPAREN parameter_list RPAREN .)

