
# I think side effects in general should be
# contracted. There's no way to keep a handle on
# every other thing possible.

# So there are a few things we're looking out for:
# global variable access, side-effect-producing
# function calls, and input mutations.

# See `scope` for global variables.

# What about side-effect-producing calls?

fun order_a_pizza() {
    ... # side effects
}

a = foo()
b = bar()
order_a_pizza();  # does something externally!
c = baz()

# Maybe it's an error to assign the return value
# of a non-returning function. Although that still
# doesn't fix the case where a function has side
# effects and a return value.
